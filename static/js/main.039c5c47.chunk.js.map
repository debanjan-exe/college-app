{"version":3,"sources":["components/Home.js","components/CourseStructure.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","Course","props","courseName","match","params","coursename","useState","courses","setCourses","useEffect","playlistid","fetch","then","res","json","data","result","items","map","item","title","snippet","vid","contentDetails","videoId","uid","utit","counter","setCounter","watched","localStorage","getItem","JSON","parse","includes","length","class","url","width","height","controls","onEnded","setItem","stringify","index","href","onClick","App","exact","path","component","CourseStructure","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAmBeA,MAdf,WACE,OACE,gCACI,oBAAIC,UAAU,SAAd,qBACA,cAAC,IAAD,CAAMC,GAAG,WAAT,SACI,oBAAID,UAAU,UAAd,oCAEJ,cAAC,IAAD,CAAMC,GAAG,UAAT,SACI,oBAAID,UAAU,UAAd,kC,iCC0FGE,MAjGf,SAAgBC,GAEZ,IAAMC,EAAaD,EAAME,MAAMC,OAAOC,WAFnB,EAGUC,mBAAS,IAHnB,mBAGZC,EAHY,KAGJC,EAHI,KAKnBC,qBAAU,WAEN,IAAIC,EAAa,GAEbA,EADc,YAAfR,EACc,qCAEA,qCACjBS,MAAM,kHAAD,OAAmHD,EAAnH,iDACJE,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACF,IAAMC,EAASD,EAAKE,MAAMC,KAAI,SAAAC,GAC1B,MAAM,CAACC,MAAMD,EAAKE,QAAQD,MAAOE,IAAIH,EAAKI,eAAeC,YAGjEhB,EAAWQ,GACXS,EAAIT,EAAO,GAAGM,KACdI,EAAKV,EAAO,GAAGI,YAEjB,IAvBiB,MAyBFd,mBAAS,IAzBP,mBAyBZgB,EAzBY,KAyBRG,EAzBQ,OA0BCnB,mBAAS,IA1BV,mBA0BZc,EA1BY,KA0BNM,EA1BM,OA2BSpB,mBAAS,GA3BlB,mBA2BZqB,EA3BY,KA2BJC,EA3BI,KA4BbC,EAAU,SAACP,GACb,SAAGQ,aAAaC,QAAQ,YACjBC,KAAKC,MAAMH,aAAaC,QAAQ,WAAWG,SAASZ,KAiCjE,OACE,8BACKf,EAAQ4B,OAAS,EACd,gCA3BA,qCACA,6BAAMf,IACN,qBAAKgB,MAAM,kBAAX,SACA,cAAC,IAAD,CACAtC,UAAU,eACVuC,IAAG,0CAAqCf,GACxCgB,MAAM,OACNC,OAAO,OACPC,UAAU,EAEVC,QAAS,WACL,GAAGX,aAAaC,QAAQ,UAAU,CAC9B,IAAIhB,EAAOiB,KAAKC,MAAMH,aAAaC,QAAQ,WAC3CD,aAAaY,QAAQ,SAAUV,KAAKW,UAAL,sBAAmB5B,GAAnB,CAAwBO,WAEvDQ,aAAaY,QAAQ,SAASV,KAAKW,UAAU,CAACrB,aAclD,oBAAIxB,UAAU,aAAd,SAEQS,EAAQW,KAAI,SAACC,EAAKyB,GAClB,OAAO,qBACPC,KAAK,KAAK/C,UAAW6B,IAAUiB,EAAQ,yBAAyB,kBAChEE,QAAS,WACLrB,EAAIN,EAAKG,KACTI,EAAKP,EAAKC,OACVQ,EAAWgB,IALR,UAOFzB,EAAKC,MAENS,EAAQV,EAAKG,MAAQ,mBAAGxB,UAAU,sBAAb,8BAUrC,gDC/EGiD,MAXf,WACE,OACE,qBAAKjD,UAAU,MAAf,SACE,eAAC,IAAD,WACC,cAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,IAAIC,UAAWrD,IACjC,cAAC,IAAD,CAAOoD,KAAK,eAAeC,UAAWC,UCC9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.039c5c47.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './home.css';\r\n\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n        <h1 className=\"header\">WELCOME</h1>\r\n        <Link to=\"/reactjs\">\r\n            <h3 className=\"options\">Software Engineering</h3>\r\n        </Link>\r\n        <Link to=\"/nodejs\">\r\n            <h3 className=\"options\">Microprocessor</h3>\r\n        </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React,{useState,useEffect} from 'react';\r\nimport ReactPlayer from 'react-player';\r\n// import {Link} from 'react-router-dom';\r\n// https://youtube.googleapis.com/youtube/v3/playlistItems?part=contentDetails%2Csnippet&maxResults=45&playlistId=PLWM0X9RJ_8hQDqadxs2uC__jpg61EMx4T&key=AIzaSyDBg_GDUjbREPe5daDcFcFuXXje7t627lc\r\n\r\n\r\nfunction Course(props) {\r\n\r\n    const courseName = props.match.params.coursename;\r\n    const [courses,setCourses] = useState([])\r\n    \r\n    useEffect(()=>{\r\n\r\n        let playlistid = \"\"\r\n        if(courseName === \"reactjs\"){\r\n            playlistid = \"PLWM0X9RJ_8hQDqadxs2uC__jpg61EMx4T\"\r\n        }else\r\n            playlistid = \"PL9EbFNET5w09GrPKH_jXrH8waA0CSLyf5\"\r\n        fetch(`https://youtube.googleapis.com/youtube/v3/playlistItems?part=contentDetails%2Csnippet&maxResults=45&playlistId=${playlistid}&key=AIzaSyDBg_GDUjbREPe5daDcFcFuXXje7t627lc`)\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            const result = data.items.map(item=>{\r\n                return{title:item.snippet.title, vid:item.contentDetails.videoId}\r\n            })\r\n\r\n        setCourses(result)\r\n        uid(result[0].vid)\r\n        utit(result[0].title)\r\n        })\r\n    },[])\r\n\r\n    const [vid,uid]= useState(\"\")\r\n    const [title,utit]= useState(\"\")\r\n    const [counter,setCounter]= useState(0)\r\n    const watched = (vid) => {\r\n        if(localStorage.getItem(\"saveID\")){\r\n            if(JSON.parse(localStorage.getItem(\"saveID\")).includes(vid)){\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    \r\n    const renderVideo = ()=>{\r\n        return (\r\n            <>\r\n            <h3>{ title }</h3>\r\n            <div class=\"video-container\">\r\n            <ReactPlayer\r\n            className='react-player'\r\n            url={`https://www.youtube.com/watch?v=${vid}`}\r\n            width='100%'\r\n            height='100%'\r\n            controls={true}\r\n\r\n            onEnded={()=>{\r\n                if(localStorage.getItem(\"saveID\")){\r\n                    let data = JSON.parse(localStorage.getItem(\"saveID\"))\r\n                    localStorage.setItem(\"saveID\", JSON.stringify([...data,vid]))\r\n                }else{\r\n                    localStorage.setItem(\"saveID\",JSON.stringify([vid]))\r\n                }\r\n            }}\r\n            />\r\n                {/* <iframe title=\"best-title\" width=\"480\" height=\"240\" src={`//www.youtube.com/embed/${vid}?rel=0`} frameBorder=\"0\" allowFullscreen></iframe> */}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n  return (\r\n    <div>\r\n        {courses.length > 0 ? \r\n            <div>\r\n                {renderVideo()}\r\n                <ul className=\"collection\">\r\n                    {\r\n                        courses.map((item,index)=>{\r\n                        return <li \r\n                        href=\"#!\" className={counter===index ? \"collection-item myitem\":\"collection-item\"} \r\n                        onClick={()=>{\r\n                            uid(item.vid)\r\n                            utit(item.title)\r\n                            setCounter(index)\r\n                        }}>\r\n                            {item.title}\r\n                            {\r\n                            watched(item.vid) && <i className=\"tiny material-icons\">check</i>\r\n                            }\r\n                            \r\n                            </li>\r\n                            \r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        :\r\n            <h1>Loading....</h1>\r\n        } \r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Course;\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Home from \"./components/Home\";\nimport CourseStructure from \"./components/CourseStructure\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n       <Route exact path=\"/\" component={Home} />\n       <Route path=\"/:coursename\" component={CourseStructure} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}